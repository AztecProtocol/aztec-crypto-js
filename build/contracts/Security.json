{
  "contractName": "Security",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "message",
          "type": "bytes32"
        }
      ],
      "name": "Debug2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "signingAddr",
          "type": "address"
        }
      ],
      "name": "Debug3",
      "type": "event"
    }
  ],
  "bytecode": "0x604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058202beaae3e4c85d3f0ae7101785eb0e8225540b56230d07ea7b1dfbf175df98c6e0029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058202beaae3e4c85d3f0ae7101785eb0e8225540b56230d07ea7b1dfbf175df98c6e0029",
  "sourceMap": "1413:1524:12:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "1413:1524:12:-;;;;;;;;",
  "source": "pragma solidity ^0.4.23;\n\n/// @dev libraries are functionally similar to contracts, with some key differences\n/// libraries cannot have their own storage variables (they have no persistant state)\n/// They are designed to have their methods called by other contracts or libraries\n/// There are two fundamental ways smart contracts can interface with a library\n/// The first is by referencing a 'library' smart contract instantiated at a specific address.\n/// The second is to incorporate a library's bytecode directly into a smart contract (done by the compiler)\n/// The former is useful for complex methods \\ as it means multiple smart contracts can reference a single\n/// library and reduce the amount of raw bytecode that needs to be  deployed on-chain\n/// The latter is useful for small helper functions, where the gas cost of calling an external smart contract\n/// would be excessive. This is done by declaring a library function to be `internal`. This notifies the  \n/// Solidity compiler to incorporate the function's bytecode in any contract that uses the library.\n/// @notice It costs 700 gas to call an external library instantiated at a specific smart contract address.\n/// When creating a smart contract, it costs 200 gas per byte of bytecode the contract contains.\n/// Whether a library's methods should be internal or not depends on which of the above two\n/// is worth minimizing for a given method.\nlibrary Security {\n\n    /// @dev we defnie the ECDSASignature struct, which contains the variables used to validate an\n    /// @dev ECDSA signature. See https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm\n    struct ECDSASignature {\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n    }\n    event Debug2(bytes32 message);\n    event Debug3(address signingAddr);\n\n    // 'ecdsarecover' can be used, alongside valid signatures,\n    // to validate that the 'order' was consented to by buyer and seller\n    // https://ethereum.stackexchange.com/questions/710/how-can-i-verify-a-cryptographic-signature-that-was-produced-by-an-ethereum-addr\n    /// @return a boolean depending on if signer of signature is part of whitelist\n    /// @dev The 'message' of the signature needs to be the address of the whoever called the parent contract\n    /// cast `parent` to a ParentInterface contract type, so that we can call the\n    /// `isWhitelisted` method. If this method does not exist the function should throw\n    function getSignatureAddress(ECDSASignature memory signature) internal view returns(address) {\n        bytes32 message = keccak256(\"\\x19Ethereum Signed Message:\\n32\", keccak256(bytes32(msg.sender)));\n        address signingAddr = ecrecover(message, signature.v, signature.r, signature.s);\n        return signingAddr;\n        // TODO: get ethereum address that signed ECDSASignature signature,\n        // then call _parent.isWhitelisted with the signing address as the input parameter\n    }\n  \n}\n",
  "sourcePath": "/mnt/c/Users/zacha/CreditMint/Projects/smart-contracts/contracts/lib/Security/Security.sol",
  "ast": {
    "absolutePath": "/mnt/c/Users/zacha/CreditMint/Projects/smart-contracts/contracts/lib/Security/Security.sol",
    "exportedSymbols": {
      "Security": [
        700
      ]
    },
    "id": 701,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 650,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:12"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@dev libraries are functionally similar to contracts, with some key differences\n libraries cannot have their own storage variables (they have no persistant state)\n They are designed to have their methods called by other contracts or libraries\n There are two fundamental ways smart contracts can interface with a library\n The first is by referencing a 'library' smart contract instantiated at a specific address.\n The second is to incorporate a library's bytecode directly into a smart contract (done by the compiler)\n The former is useful for complex methods \\ as it means multiple smart contracts can reference a single\n library and reduce the amount of raw bytecode that needs to be  deployed on-chain\n The latter is useful for small helper functions, where the gas cost of calling an external smart contract\n would be excessive. This is done by declaring a library function to be `internal`. This notifies the  \n Solidity compiler to incorporate the function's bytecode in any contract that uses the library.\n @notice It costs 700 gas to call an external library instantiated at a specific smart contract address.\n When creating a smart contract, it costs 200 gas per byte of bytecode the contract contains.\n Whether a library's methods should be internal or not depends on which of the above two\n is worth minimizing for a given method.",
        "fullyImplemented": true,
        "id": 700,
        "linearizedBaseContracts": [
          700
        ],
        "name": "Security",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Security.ECDSASignature",
            "id": 657,
            "members": [
              {
                "constant": false,
                "id": 652,
                "name": "r",
                "nodeType": "VariableDeclaration",
                "scope": 657,
                "src": "1675:9:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 651,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1675:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 654,
                "name": "s",
                "nodeType": "VariableDeclaration",
                "scope": 657,
                "src": "1694:9:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 653,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1694:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 656,
                "name": "v",
                "nodeType": "VariableDeclaration",
                "scope": 657,
                "src": "1713:7:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 655,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1713:5:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ECDSASignature",
            "nodeType": "StructDefinition",
            "scope": 700,
            "src": "1643:84:12",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 661,
            "name": "Debug2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 659,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "1745:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1745:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1744:17:12"
            },
            "src": "1732:30:12"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 665,
            "name": "Debug3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "indexed": false,
                  "name": "signingAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "1780:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1780:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1779:21:12"
            },
            "src": "1767:34:12"
          },
          {
            "body": {
              "id": 698,
              "nodeType": "Block",
              "src": "2536:396:12",
              "statements": [
                {
                  "assignments": [
                    673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 673,
                      "name": "message",
                      "nodeType": "VariableDeclaration",
                      "scope": 699,
                      "src": "2546:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 672,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2546:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 683,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2574:34:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                          "typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
                        },
                        "value": "\u0019Ethereum Signed Message:\n32"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 678,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 882,
                                  "src": "2628:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2628:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2620:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": "bytes32"
                            },
                            "id": 680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2620:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 676,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "2610:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                            "typeString": "function () pure returns (bytes32)"
                          }
                        },
                        "id": 681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2610:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                          "typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 674,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 876,
                      "src": "2564:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                        "typeString": "function () pure returns (bytes32)"
                      }
                    },
                    "id": 682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2564:77:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2546:95:12"
                },
                {
                  "assignments": [
                    685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 685,
                      "name": "signingAddr",
                      "nodeType": "VariableDeclaration",
                      "scope": 699,
                      "src": "2651:19:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 684,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2651:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 695,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 687,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 673,
                        "src": "2683:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 688,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "2692:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ECDSASignature_$657_memory_ptr",
                            "typeString": "struct Security.ECDSASignature memory"
                          }
                        },
                        "id": 689,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "v",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 656,
                        "src": "2692:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 690,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "2705:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ECDSASignature_$657_memory_ptr",
                            "typeString": "struct Security.ECDSASignature memory"
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "r",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 652,
                        "src": "2705:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 692,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "2718:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ECDSASignature_$657_memory_ptr",
                            "typeString": "struct Security.ECDSASignature memory"
                          }
                        },
                        "id": 693,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "s",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 654,
                        "src": "2718:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 686,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "2673:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2673:57:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2651:79:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 696,
                    "name": "signingAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 685,
                    "src": "2747:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 671,
                  "id": 697,
                  "nodeType": "Return",
                  "src": "2740:18:12"
                }
              ]
            },
            "documentation": "@return a boolean depending on if signer of signature is part of whitelist\n @dev The 'message' of the signature needs to be the address of the whoever called the parent contract\n cast `parent` to a ParentInterface contract type, so that we can call the\n `isWhitelisted` method. If this method does not exist the function should throw",
            "id": 699,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getSignatureAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 699,
                  "src": "2472:31:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ECDSASignature_$657_memory_ptr",
                    "typeString": "struct Security.ECDSASignature"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 666,
                    "name": "ECDSASignature",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 657,
                    "src": "2472:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ECDSASignature_$657_storage_ptr",
                      "typeString": "struct Security.ECDSASignature"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2471:33:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 699,
                  "src": "2527:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2527:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2526:9:12"
            },
            "scope": 700,
            "src": "2443:489:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 701,
        "src": "1413:1524:12"
      }
    ],
    "src": "0:2938:12"
  },
  "legacyAST": {
    "absolutePath": "/mnt/c/Users/zacha/CreditMint/Projects/smart-contracts/contracts/lib/Security/Security.sol",
    "exportedSymbols": {
      "Security": [
        700
      ]
    },
    "id": 701,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 650,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:12"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@dev libraries are functionally similar to contracts, with some key differences\n libraries cannot have their own storage variables (they have no persistant state)\n They are designed to have their methods called by other contracts or libraries\n There are two fundamental ways smart contracts can interface with a library\n The first is by referencing a 'library' smart contract instantiated at a specific address.\n The second is to incorporate a library's bytecode directly into a smart contract (done by the compiler)\n The former is useful for complex methods \\ as it means multiple smart contracts can reference a single\n library and reduce the amount of raw bytecode that needs to be  deployed on-chain\n The latter is useful for small helper functions, where the gas cost of calling an external smart contract\n would be excessive. This is done by declaring a library function to be `internal`. This notifies the  \n Solidity compiler to incorporate the function's bytecode in any contract that uses the library.\n @notice It costs 700 gas to call an external library instantiated at a specific smart contract address.\n When creating a smart contract, it costs 200 gas per byte of bytecode the contract contains.\n Whether a library's methods should be internal or not depends on which of the above two\n is worth minimizing for a given method.",
        "fullyImplemented": true,
        "id": 700,
        "linearizedBaseContracts": [
          700
        ],
        "name": "Security",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Security.ECDSASignature",
            "id": 657,
            "members": [
              {
                "constant": false,
                "id": 652,
                "name": "r",
                "nodeType": "VariableDeclaration",
                "scope": 657,
                "src": "1675:9:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 651,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1675:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 654,
                "name": "s",
                "nodeType": "VariableDeclaration",
                "scope": 657,
                "src": "1694:9:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 653,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1694:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 656,
                "name": "v",
                "nodeType": "VariableDeclaration",
                "scope": 657,
                "src": "1713:7:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 655,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1713:5:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ECDSASignature",
            "nodeType": "StructDefinition",
            "scope": 700,
            "src": "1643:84:12",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 661,
            "name": "Debug2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 659,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "1745:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1745:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1744:17:12"
            },
            "src": "1732:30:12"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 665,
            "name": "Debug3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "indexed": false,
                  "name": "signingAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "1780:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1780:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1779:21:12"
            },
            "src": "1767:34:12"
          },
          {
            "body": {
              "id": 698,
              "nodeType": "Block",
              "src": "2536:396:12",
              "statements": [
                {
                  "assignments": [
                    673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 673,
                      "name": "message",
                      "nodeType": "VariableDeclaration",
                      "scope": 699,
                      "src": "2546:15:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 672,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2546:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 683,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2574:34:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                          "typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
                        },
                        "value": "\u0019Ethereum Signed Message:\n32"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 678,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 882,
                                  "src": "2628:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2628:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2620:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": "bytes32"
                            },
                            "id": 680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2620:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 676,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "2610:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                            "typeString": "function () pure returns (bytes32)"
                          }
                        },
                        "id": 681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2610:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                          "typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 674,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 876,
                      "src": "2564:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                        "typeString": "function () pure returns (bytes32)"
                      }
                    },
                    "id": 682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2564:77:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2546:95:12"
                },
                {
                  "assignments": [
                    685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 685,
                      "name": "signingAddr",
                      "nodeType": "VariableDeclaration",
                      "scope": 699,
                      "src": "2651:19:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 684,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2651:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 695,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 687,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 673,
                        "src": "2683:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 688,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "2692:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ECDSASignature_$657_memory_ptr",
                            "typeString": "struct Security.ECDSASignature memory"
                          }
                        },
                        "id": 689,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "v",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 656,
                        "src": "2692:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 690,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "2705:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ECDSASignature_$657_memory_ptr",
                            "typeString": "struct Security.ECDSASignature memory"
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "r",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 652,
                        "src": "2705:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 692,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "2718:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ECDSASignature_$657_memory_ptr",
                            "typeString": "struct Security.ECDSASignature memory"
                          }
                        },
                        "id": 693,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "s",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 654,
                        "src": "2718:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 686,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "2673:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2673:57:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2651:79:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 696,
                    "name": "signingAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 685,
                    "src": "2747:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 671,
                  "id": 697,
                  "nodeType": "Return",
                  "src": "2740:18:12"
                }
              ]
            },
            "documentation": "@return a boolean depending on if signer of signature is part of whitelist\n @dev The 'message' of the signature needs to be the address of the whoever called the parent contract\n cast `parent` to a ParentInterface contract type, so that we can call the\n `isWhitelisted` method. If this method does not exist the function should throw",
            "id": 699,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getSignatureAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 699,
                  "src": "2472:31:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ECDSASignature_$657_memory_ptr",
                    "typeString": "struct Security.ECDSASignature"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 666,
                    "name": "ECDSASignature",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 657,
                    "src": "2472:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ECDSASignature_$657_storage_ptr",
                      "typeString": "struct Security.ECDSASignature"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2471:33:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 699,
                  "src": "2527:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2527:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2526:9:12"
            },
            "scope": 700,
            "src": "2443:489:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 701,
        "src": "1413:1524:12"
      }
    ],
    "src": "0:2938:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-09-01T11:10:37.562Z"
}