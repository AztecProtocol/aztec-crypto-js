{
  "contractName": "NizkInterface",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32[39]"
        }
      ],
      "name": "validateSplitTx",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[19]"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32[23]"
        }
      ],
      "name": "validateJoinTx",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[19]"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32[6]"
        }
      ],
      "name": "validateCommitTx",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[7]"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32[10]"
        }
      ],
      "name": "validateRedeemTx",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[7]"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32[3]"
        }
      ],
      "name": "DEBUG_eccMul",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[2]"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32[4]"
        }
      ],
      "name": "DEBUG_eccAdd",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[2]"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32[8]"
        }
      ],
      "name": "DEBUG_pairing",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610434806100206000396000f300608060405260043610610082576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680623ec6b91461008757806306a791d0146100f057806375d3464114610159578063814fba66146101c357806391036ec81461022d578063acc8cecd14610296578063dda62ba514610300575b600080fd5b34801561009357600080fd5b506100b26004803603810190808060600190919291929050505061034a565b6040518082600260200280838360005b838110156100dd5780820151818401526020810190506100c2565b5050505090500191505060405180910390f35b3480156100fc57600080fd5b5061011b60048036038101908080608001909192919290505050610357565b6040518082600260200280838360005b8381101561014657808201518184015260208101905061012b565b5050505090500191505060405180910390f35b34801561016557600080fd5b50610185600480360381019080806104e001909192919290505050610364565b6040518082601360200280838360005b838110156101b0578082015181840152602081019050610195565b5050505090500191505060405180910390f35b3480156101cf57600080fd5b506101ef6004803603810190808061014001909192919290505050610371565b6040518082600760200280838360005b8381101561021a5780820151818401526020810190506101ff565b5050505090500191505060405180910390f35b34801561023957600080fd5b506102586004803603810190808060c00190919291929050505061037e565b6040518082600760200280838360005b83811015610283578082015181840152602081019050610268565b5050505090500191505060405180910390f35b3480156102a257600080fd5b506102c2600480360381019080806102e00190919291929050505061038b565b6040518082601360200280838360005b838110156102ed5780820151818401526020810190506102d2565b5050505090500191505060405180910390f35b34801561030c57600080fd5b5061032c6004803603810190808061010001909192919290505050610398565b60405180826000191660001916815260200191505060405180910390f35b61035261039f565b919050565b61035f61039f565b919050565b61036c6103c1565b919050565b6103796103e5565b919050565b6103866103e5565b919050565b6103936103c1565b919050565b6000919050565b6040805190810160405280600290602082028038833980820191505090505090565b61026060405190810160405280601390602082028038833980820191505090505090565b60e0604051908101604052806007906020820280388339808201915050905050905600a165627a7a723058204d5982c90f80f5d0937130a765f3be7a5b9aa4e05f6f13e23373f0df3af19fea0029",
  "deployedBytecode": "0x608060405260043610610082576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680623ec6b91461008757806306a791d0146100f057806375d3464114610159578063814fba66146101c357806391036ec81461022d578063acc8cecd14610296578063dda62ba514610300575b600080fd5b34801561009357600080fd5b506100b26004803603810190808060600190919291929050505061034a565b6040518082600260200280838360005b838110156100dd5780820151818401526020810190506100c2565b5050505090500191505060405180910390f35b3480156100fc57600080fd5b5061011b60048036038101908080608001909192919290505050610357565b6040518082600260200280838360005b8381101561014657808201518184015260208101905061012b565b5050505090500191505060405180910390f35b34801561016557600080fd5b50610185600480360381019080806104e001909192919290505050610364565b6040518082601360200280838360005b838110156101b0578082015181840152602081019050610195565b5050505090500191505060405180910390f35b3480156101cf57600080fd5b506101ef6004803603810190808061014001909192919290505050610371565b6040518082600760200280838360005b8381101561021a5780820151818401526020810190506101ff565b5050505090500191505060405180910390f35b34801561023957600080fd5b506102586004803603810190808060c00190919291929050505061037e565b6040518082600760200280838360005b83811015610283578082015181840152602081019050610268565b5050505090500191505060405180910390f35b3480156102a257600080fd5b506102c2600480360381019080806102e00190919291929050505061038b565b6040518082601360200280838360005b838110156102ed5780820151818401526020810190506102d2565b5050505090500191505060405180910390f35b34801561030c57600080fd5b5061032c6004803603810190808061010001909192919290505050610398565b60405180826000191660001916815260200191505060405180910390f35b61035261039f565b919050565b61035f61039f565b919050565b61036c6103c1565b919050565b6103796103e5565b919050565b6103866103e5565b919050565b6103936103c1565b919050565b6000919050565b6040805190810160405280600290602082028038833980820191505090505090565b61026060405190810160405280601390602082028038833980820191505090505090565b60e0604051908101604052806007906020820280388339808201915050905050905600a165627a7a723058204d5982c90f80f5d0937130a765f3be7a5b9aa4e05f6f13e23373f0df3af19fea0029",
  "sourceMap": "437:626:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;437:626:2;;;;;;;",
  "deployedSourceMap": "437:626:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;840:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;840:71:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;840:71:2;;;;;;;;;;;;;;;;916;;8:9:-1;5:2;;;30:1;27;20:12;5:2;916:71:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;916:71:2;;;;;;;;;;;;;;;;518:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;518:76:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;518:76:2;;;;;;;;;;;;;;;;759;;8:9:-1;5:2;;;30:1;27;20:12;5:2;759:76:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;759:76:2;;;;;;;;;;;;;;;;679:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;679:75:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;679:75:2;;;;;;;;;;;;;;;;599;;8:9:-1;5:2;;;30:1;27;20:12;5:2;599:75:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;599:75:2;;;;;;;;;;;;;;;;992:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;992:69:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;840:71;897:10;;:::i;:::-;840:71;;;:::o;916:::-;973:10;;:::i;:::-;916:71;;;:::o;518:76::-;579:11;;:::i;:::-;518:76;;;:::o;759:::-;821:10;;:::i;:::-;759:76;;;:::o;679:75::-;740:10;;:::i;:::-;679:75;;;:::o;599:::-;659:11;;:::i;:::-;599:75;;;:::o;992:69::-;1050:7;992:69;;;:::o;437:626::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;437:626:2;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;437:626:2;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;437:626:2;;;;:::o",
  "source": "pragma solidity ^0.4.20;\n\n// ######################################################################################\n// Title: Non-Interactive Zero-Knowledge anonymous note protocol validator smart contract\n// Author: Zachary Williamson\n// Confidential and not for public release\n// \n// Disclaimer: This is a technical demo, use at your own risk!\n// ######################################################################################\n\ncontract NizkInterface { // swap ABI with this when using Nizk as a contract\n    function validateSplitTx(bytes32[39]) external pure returns (bytes32[19]) {}\n    function validateJoinTx(bytes32[23]) external pure returns (bytes32[19]) {}\n    function validateCommitTx(bytes32[6]) external pure returns (bytes32[7]) {}\n    function validateRedeemTx(bytes32[10]) external pure returns (bytes32[7]) {}\n    function DEBUG_eccMul(bytes32[3]) external pure returns (bytes32[2]) {}\n    function DEBUG_eccAdd(bytes32[4]) external pure returns (bytes32[2]) {}\n    function DEBUG_pairing(bytes32[8]) external pure returns (bytes32) {}\n}\n\nlibrary NizkInterfaceLibrary { // swap ABI this when using Nizk as a library\n    function validateSplitTx(bytes32[39]) external pure returns (bytes32[19]) {}\n    function validateJoinTx(bytes32[23]) external pure returns (bytes32[19]) {}\n    function validateCommitTx(bytes32[6]) external pure returns (bytes32[7]) {}\n    function validateRedeemTx(bytes32[10]) external pure returns (bytes32[7]) {}\n    function DEBUG_eccMul(bytes32[3]) external pure returns (bytes32[2]) {}\n    function DEBUG_eccAdd(bytes32[4]) external pure returns (bytes32[2]) {}\n    function DEBUG_pairing(bytes32[8]) external pure returns (bytes32) {}\n}\n\ncontract Nizk {\n    function () public {\n        assembly {\n            // ### FUNCTION SELECTOR\n            // -------------------------------------------------------------------\n            switch getFunctionSelector()\n                case 0x75d34641 {   // \"validateSplitTx(bytes32[39]) external\"\n                    validateSplitTx()\n                }\n                case 0xacc8cecd {   // \"validateJoinTx(bytes32[23]) external\"\n                    validateJoinTx()\n                }\n                case 0x814fba66 {   // \"validateRedeemTx(bytes32[10]) external\"\n                    validateRedeemTx()\n                }\n                case 0x91036ec8 {   // \"validateCommitTx(bytes32[6]) external\"\n                    validateCommitTx()\n                }\n                case 0x003ec6b9 {   // \"DEBUG_eccMul(bytes32[3]) external\"\n                    let m := mload(0x40)\n                    eccMul(calldataload(0x04), calldataload(0x24), calldataload(0x44), m)\n                    return(m, 0x40)\n                }\n                case 0x06a791d0 {   // \"DEBUG_eccAdd(bytes32[4]) external\"\n                    let m := mload(0x40)\n                    calldatacopy(m, 0x04, 0x80)\n                    eccCombine(m)\n                    return(m, 0x40)\n                }\n                case 0xdda62ba5 {   // \"DEBUG_pairing(bytes32[8]) external\"\n                    let m := mload(0x40)\n                    calldatacopy(m, 0x04, 0x80)\n                    validatePairing(m, 0x84)\n                    return(m, 0x20)\n                }\n                default {\n                    mstore(0x0, 404) // hey! there's nothing here!\n                    revert(0x0, 0x20)\n                }\n            // -------------------------------------------------------------------\n            // multiply point (x, y) by 's', store result in 'r'\n            function eccMul(x, y, s, r) {\n                let m := mload(0x40)\n                mstore(m, x)\n                mstore(add(m, 0x20), y)\n                mstore(add(m, 0x40), s)\n                if iszero(staticcall(not(0), 7, m, 0x60, r, 0x40)) {\n                    mstore(0x00, 400)\n                    revert(0x00, 0x20)\n                }\n            }\n            // add 2 points stored consecutively at 'm', store result in 'm'\n            function eccCombine(m) {\n                if iszero(staticcall(not(0), 6, m, 0x80, m, 0x40)) {\n                    mstore(0x00, 400)\n                    revert(0x00, 0x20)\n                }\n            }\n            // evaluate if e(P1, g2y) . e(P2, g2) == 0\n            function validatePairing(points, g2y) {\n                let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n                let g2y_x_1 := calldataload(g2y) // 0x464\n                let g2y_x_2 := calldataload(add(g2y, 0x20))\n                let g2y_y_1 := calldataload(add(g2y, 0x40))\n                let g2y_y_2 := calldataload(add(g2y, 0x60))\n                // check provided setup pubkey is not zero or g2\n                if or(or(or(or(or(or(or(\n                    iszero(g2y_x_1),\n                    iszero(g2y_x_2)),\n                    iszero(g2y_y_1)),\n                    iszero(g2y_y_2)),\n                    eq(g2y_x_1, 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)),\n                    eq(g2y_x_2, 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)),\n                    eq(g2y_y_1, 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)),\n                    eq(g2y_y_2, 0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b))\n                {\n                    mstore(0x00, 500)\n                    revert(0x00, 0x20)\n                }\n                let x_1 := mload(points)\n                let y_1 := mload(add(points, 0x20))\n                let x_2 := mload(add(points, 0x40))\n                let y_2 := mload(add(points, 0x60))\n\n                // store coords in memory\n                // indices are a bit off, scipr lab's libff limb ordering (c0, c1) is opposite to what precompile expects\n                let m := mload(0x40)\n                mstore(m, x_1)\n                mstore(add(m, 0x20), y_1)\n                mstore(add(m, 0x60), 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)\n                mstore(add(m, 0x40), 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)\n                mstore(add(m, 0xa0), 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)\n                mstore(add(m, 0x80), 0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b)\n                mstore(add(m, 0xc0), x_2)\n                mstore(add(m, 0xe0), y_2)\n                mstore(add(m, 0x120), g2y_x_1)\n                mstore(add(m, 0x100), g2y_x_2)\n                mstore(add(m, 0x160), g2y_y_1)\n                mstore(add(m, 0x140), g2y_y_2)\n                let success := staticcall(not(0), 8, m, 0x180, m, 0x20)\n                if or(iszero(success), iszero(mload(m))) {\n                    mstore(0x00, 400)\n                    revert(0x00, 0x20)\n                }\n            }\n\n            function validateCommitTx() {\n                // calldata map\n                // 0x00 - 0x04: function signature\n                // 0x04 - 0x24: address of sender\n                // 0x24 - 0x64: s_1\n                // 0x64 - 0x84: k (public)\n                // 0x84 - 0xa4: b_1 (signature)\n                // 0xa4 - 0xc4: c (hash)\n                let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n                let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n                let c := calldataload(0xa4)\n                let o := 0x84\n                let pointCache := mload(0x40)\n                mstore(0x40, add(pointCache, 0x80)) // reserve 4 words of memory\n                if iszero(eq(calldatasize, 0xc4)) {\n                    mstore(0x00, 400)\n                    revert(0x00, 0x20)\n                }\n\n                // ### calculate g^{b_{1}}.s_{1}^{-c.x_{1}} = B\n                let x := calldataload(0x24)\n                let y := calldataload(0x44)\n                checkWellFormed(x, y)\n\n                eccMul(x, sub(field_order, y), c, pointCache)\n                eccMul(1, 2, sig_b1(o), add(pointCache, 0x40))\n                eccCombine(pointCache)\n\n                // ### validate B\n                mstore(add(pointCache, 0x60), mload(pointCache))\n                mstore(add(pointCache, 0x80), mload(add(pointCache, 0x20)))\n                calldatacopy(pointCache, 0x04, 0x60)\n                // memory map:\n                // 0x00 - 0x20: message sender\n                // 0x20 - 0x60: s_{1}\n                // 0x60 - 0xa0: B\n                let result := keccak256(pointCache, 0xa0)\n                if eq(result, c) {\n                    // calculate and store c: g^{k}.s_{1}\n                    eccMul(1, 2, sig_k(o), add(pointCache, 0x20))\n                    mstore(add(pointCache, 0x60), x)\n                    mstore(add(pointCache, 0x80), y)\n                    eccCombine(add(pointCache, 0x20))\n                    // store d: g\n                    mstore(add(pointCache, 0x60), 0x1)\n                    mstore(add(pointCache, 0x80), 0x2)\n                    // store s\n                    calldatacopy(add(pointCache, 0xa0), 0x24, 0x40)\n                    mstore(pointCache, 0x1)\n                    return(pointCache, 0xe0)\n                }\n\n                mstore(0x00, 403)\n                revert(0x00, 0x20)\n            }\n\n            function validateRedeemTx() {\n                // calldata map\n                // 0x00 - 0x04: function signature\n                // 0x04 - 0x24: address of sender\n                // 0x24 - 0xe4: c_1, d_1, s_1\n                // 0xe4 - 0x104: k (public)\n                // 0x104 - 0x124: b_1 (signature)\n                // 0x124 - 0x144: c (hash)\n\n                let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n                let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n                let c := calldataload(0x124)\n                let o := 0x104 // offset to get signature\n                let runningHash := hashInputs(0x100) // 3 points + sender address + k = 8 words, 256 (0x100) bytes\n\n                let pointCache := mload(0x40)\n                mstore(0x40, add(pointCache, 0x80)) // reserve 4 words of memory\n\n                if iszero(eq(calldatasize, 0x144)) {\n                    mstore(0x00, 400)\n                    revert(0x00, 0x20)\n                }\n\n                // ### calculate s_{1}^{-c.x_{1}}\n                let gScalar := mulmod(runningHash, sig_b1(o), gen_order)\n                let x, y := s1()\n                eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), pointCache)\n                runningHash := advanceHash(runningHash)\n\n                // ### calculate c_{1}^{-c.x_{2}}\n                gScalar := addmod(gScalar, mulmod(c, mulmod(runningHash, sig_k(o), gen_order), gen_order), gen_order)\n                x, y := c1()\n                eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n\n                x, y := d1()\n                eccMul(x, y, mulmod(runningHash, sig_b1(o), gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n\n                // ### calculate generator exponentiation\n                // exponent: b_{1}.x_{1} + k.c.x_{2}\n                eccMul(1, 2, gScalar, add(pointCache, 0x40))\n                eccCombine(pointCache) // get resulting point, the blinding factor\n\n                // validate calculated blinding factor B was provided as an input into original hash 'c'\n                // memory map:\n                // 0x00 - 0x20: B.x\n                // 0x20 - 0x40: B.y\n                // 0x40 - 0x60: x_{2}\n                mstore(add(pointCache, 0x40), runningHash)\n                let result := keccak256(pointCache, 0x60)\n                if eq(result, c) {\n                    calldatacopy(add(pointCache, 0x20), 0x24, 0xe0)\n                    mstore(pointCache, 0x1)\n                    return(pointCache, 0xe0)\n                }\n                mstore(0x00, 403)\n                revert(0x00, 0x20)\n            }\n            function validateJoinTx() {\n                // calldata map\n                // 0x00 - 0x04: function signature\n                // 0x04 - 0x24: address of sender. Could get via 'caller' but would rely on contract being called via delegateCall\n                // 0x24 - 0xe4: c_1, d_1, s_1 (input note a)\n                // 0xe4 - 0x1a4: c_2, d_2, s_1 (input note a)\n                // 0x1a4 - 0x264: c_3, d_3, s_3 (output note b)\n                // 0x264 - 0x2c4: b_1, b_2, a_3 (signatures)\n                // 0x2c4 - 0x2e4: c (hash)\n                let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n                let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n                let c := calldataload(0x2c4)\n                let o := 0x264 // offset to get signatures\n                let runningHash := hashInputs(0x260) // 9 points + sender address = 19 words, 608 (0x260) bytes\n                let pointCache := mload(0x40)\n                mstore(0x40, add(pointCache, 0xc0)) // reserve 6 words of memory\n                if iszero(eq(calldatasize, 0x2e4)) {\n                    mstore(0x00, 400)\n                    revert(0x00, 0x20)\n                }\n\n                // ### calculate s_{1}^{-c.x_{1}}\n                let gScalar := mulmod(runningHash, sig_b1(o), gen_order)\n                let x, y := s1()\n                eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), pointCache)\n                runningHash := advanceHash(runningHash)\n\n                // ### calculate s_{2}^{-c.x_{2}}\n                gScalar := addmod(gScalar, mulmod(runningHash, sig_b2(o), gen_order), gen_order)\n                x, y := s2()\n                eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n                runningHash := advanceHash(runningHash)\n\n                // ### calculate d_{3}^{-c.x_{3}}\n                gScalar := addmod(gScalar, mulmod(runningHash, sig_a3(o), gen_order), gen_order)\n                x, y := d3()\n                eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n                runningHash := advanceHash(runningHash)\n\n                // ### calculate (c_{1}.c_{2}.c_{3}^{-1})^{-c.x_{4}}\n                x, y := c1()\n                mstore(add(pointCache, 0x40), x)\n                mstore(add(pointCache, 0x60), sub(field_order,y))\n                x, y := c2()\n                mstore(add(pointCache, 0x80), x)\n                mstore(add(pointCache, 0xa0), sub(field_order,y))\n                eccCombine(add(pointCache, 0x40))\n                x, y := c3()\n                mstore(add(pointCache, 0x80), x)\n                mstore(add(pointCache, 0xa0), y)\n                eccCombine(add(pointCache, 0x40))\n                \n                x := mload(add(pointCache, 0x40))\n                y := mload(add(pointCache, 0x60))\n                eccMul(x, y, mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n\n                // ### calculate d_{1}^{b_{1}.x_{4}}\n                x, y := d1()\n                eccMul(x, y, mulmod(runningHash, sig_b1(o), gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n\n                // ### calculate d_{2}^{b_{2}.x_{4}}\n                x, y := d2()\n                eccMul(x, y, mulmod(runningHash, sig_b2(o), gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n                \n                // ### calculate s_{3}^{-a_{3}.x_{4}}\n                x, y := s3()\n                eccMul(x, sub(field_order, y), mulmod(runningHash, sig_a3(o), gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n\n                // ### calculate generator exponentiation\n                // exponent: b_{1}.x_{1} + b_{2}.x_{2} + a_{3}.x_{3}\n                eccMul(1, 2, gScalar, add(pointCache, 0x40))\n                eccCombine(pointCache) // get resulting point, the blinding factor\n\n                // validate calculated blinding factor B was provided as an input into original hash 'c'\n                // memory map:\n                // 0x00 - 0x20: B.x\n                // 0x20 - 0x40: B.y\n                // 0x40 - 0x60: x_{4}\n                mstore(add(pointCache, 0x40), runningHash)\n                let result := keccak256(pointCache, 0x60)\n                if eq(result, c) {\n                    calldatacopy(add(pointCache, 0x20), 0x24, 0x240)\n                    mstore(pointCache, 0x1)\n                    return(pointCache, 0x260)\n                }\n                mstore(0x00, 403)\n                revert(0x00, 0x20)\n            }\n            function validateSplitTx() {\n                // calldata map:\n                // 0x00 - 0x04: function signature\n                // 0x04 - 0x24: address of sender. Could get via 'caller' but would rely on contract being called via delegateCall\n                // 0x24 - 0xe4: c_1, d_1, s_1 (input note)\n                // 0xe4 - 0x1a4: c_2, d_2, s_1 (output note a)\n                // 0x1a4 - 0x264: c_3, d_3, s_3 (output note b)\n                // 0x264 - 0x2e4: gamma_1, sigma_1 (bb sigs for note a)\n                // 0x2e4 - 0x364: gamma_2, sigma_2 (bb sigs for note b)\n                // 0x364 - 0x444: b_1, a_2, a_3, k_2, k_3, r_2, r_3 (signatures)\n                // 0x444 - 0x464: c (hash)\n                // 0x464 - 0x4a4: g2y_x\n                // 0x4a4 - 0x4e4: g2y_y\n                if iszero(eq(calldatasize, 0x4e4)) { // assert calldatasize is correct\n                    mstore(0x00, 400)\n                    revert(0x00, 0x20)\n                }\n                let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n                let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n                let c := calldataload(0x444)\n                let o := 0x364 // offset in calldata to get signature\n                let runningHash := hashInputs(0x360) // 13 points + sender address = 27 words, 864 (0x360) bytes\n                let pointCache := mload(0x40)\n                mstore(0x40, add(pointCache, 0xc0)) // reserve 12 words of memory\n                // total memory use 28 words: 12 + 12 words for pairing + initial memory reserved by solitity (4 words)\n\n                // validate bilinear pairing between gamma_{1}, gamma_{2} and sigma_{1}, sigma_{2}\n                // we can re-use calculated sigma values in Sigma protocol\n                let x, y := sigma1()\n                eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), pointCache)\n                x, y := gamma1()\n                eccMul(x, y, mulmod(runningHash, c, gen_order), add(pointCache, 0x80))\n                let temp := runningHash // cache old hash, needed for gamma_1^{-k_{2}}\n                runningHash := advanceHash(runningHash)\n\n                x, y := sigma2()\n                eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n                // memory map:\n                // 0x00-0x40: sigma_{1}^{cx_1}\n                // 0x40-0x80: sigma_{2}^{cx_2}\n                // 0x80-0xc0: gamma_{1}^{cx_1}\n                eccCombine(pointCache) // add sigma_{1}, sigma_{2} together at index 0x00\n\n                x, y := gamma2()\n                eccMul(x, y, mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n                eccCombine(add(pointCache, 0x40)) // add gamma_{1}, gamma_{2} together at index 0x40\n\n                // memory map: \n                // 0x00-0x40: sigma_{1}^{cx_1} + sigma_{2}^{cx_2}\n                // 0x40-0x80: gamma_{1}^{cx_1} + gamma_{2}^{cx_2}\n                x := mload(pointCache)\n                y := mload(add(pointCache, 0x20))\n                validatePairing(pointCache, 0x464) // 464 is offset in calldata to get g2y\n\n                // add sigma_{1}^(cx_1) + sigma_{2}^(cx_2) back into memory\n                mstore(pointCache, x)\n                mstore(add(pointCache, 0x20), y)\n\n                // ### calculate gamma_1^{-k_{2}.x_{1}}.gamma_2^{-k_{3}.x_{2}}\n                let gScalar := mulmod(temp, sig_r1(o), gen_order)\n                x, y := gamma1()\n                eccMul(x, sub(field_order, y), mulmod(temp, sig_k2(o), gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n                gScalar := addmod(gScalar, mulmod(runningHash, sig_r2(o), gen_order), gen_order)\n                x, y := gamma2()\n                eccMul(x, sub(field_order, y), mulmod(runningHash, sig_k3(o), gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n\n                runningHash := advanceHash(runningHash)\n\n                // ### calculate s_{1}^{-c.x_{3}}\n                gScalar := addmod(gScalar, mulmod(runningHash, sig_b1(o), gen_order), gen_order)\n                x, y := s1()\n                eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n                runningHash := advanceHash(runningHash)\n\n                // ### calculate d_{2}^{-c.x_{4}}\n                gScalar := addmod(gScalar, mulmod(runningHash, sig_a2(o), gen_order), gen_order)\n                x, y := d2()\n                eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n                runningHash := advanceHash(runningHash)\n\n                // ### calculate d_{3}^{-c.x_{5}}\n                gScalar := addmod(gScalar, mulmod(runningHash, sig_a3(o), gen_order), gen_order)\n                x, y := d3()\n                eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n                runningHash := advanceHash(runningHash)\n\n                // ### calculate (c_{2}.g)^{-c.x_{6}}.s_{2}^{a_{2}.x_{6}}\n                gScalar := addmod(gScalar, mulmod(runningHash, sig_k2(o), gen_order), gen_order)\n                x, y := c2()\n                mstore(add(pointCache, 0x40), x)\n                mstore(add(pointCache, 0x60), y)\n                mstore(add(pointCache, 0x80), 1)\n                mstore(add(pointCache, 0xa0), 2)\n                eccCombine(add(pointCache, 0x40))\n                x := mload(add(pointCache, 0x40))\n                y := mload(add(pointCache, 0x60))\n                eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n\n                x, y := s2()\n                eccMul(x, y, mulmod(runningHash, sig_a2(o), gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n                runningHash := advanceHash(runningHash)\n\n                // ### calculate (c_{3}.g)^{-c.x_{7}}.s_{3}^{a_{3}.x_{7}}\n                gScalar := addmod(gScalar, mulmod(runningHash, sig_k3(o), gen_order), gen_order)\n                x, y := c3()\n                mstore(add(pointCache, 0x40), x)\n                mstore(add(pointCache, 0x60), y)\n                mstore(add(pointCache, 0x80), 1)\n                mstore(add(pointCache, 0xa0), 2)\n                eccCombine(add(pointCache, 0x40))\n                x := mload(add(pointCache, 0x40))\n                y := mload(add(pointCache, 0x60))\n                eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n\n                x, y := s3()\n                eccMul(x, y, mulmod(runningHash, sig_a3(o), gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n                runningHash := advanceHash(runningHash)\n\n                // ### calculate (c_{1}.g)^{-c.x_{8}}.d_{1}^{b_{1}.x_{8}}\n                gScalar := addmod(gScalar, mulmod(runningHash, sig_k2(o), gen_order), gen_order)\n                gScalar := addmod(gScalar, mulmod(runningHash, sig_k3(o), gen_order), gen_order)\n                x, y := c1()\n                mstore(add(pointCache, 0x40), x)\n                mstore(add(pointCache, 0x60), y)\n                mstore(add(pointCache, 0x80), 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd3)  // 2G\n                mstore(add(pointCache, 0xa0), 0x15ed738c0e0a7c92e7845f96b2ae9c0a68a6a449e3538fc7ff3ebf7a5a18a2c4)\n                eccCombine(add(pointCache, 0x40))\n                x := mload(add(pointCache, 0x40))\n                y := mload(add(pointCache, 0x60))\n                eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n                x, y := d1()\n                eccMul(x, y, mulmod(runningHash, sig_b1(o), gen_order), add(pointCache, 0x40))\n                eccCombine(pointCache)\n\n                // ### calculate generator exponentiation\n                // exponent: r_{1}.x_{1} + r_{2}.x_{2} + b_{1}.x_{3} + a_{2}.x_{4} + a_{3}.x_{5} + k_{2}.(x_{6} + x_{8}) + k_{3}.(x_{7} + x_{8})\n                eccMul(1, 2, gScalar, add(pointCache, 0x40))\n                eccCombine(pointCache) // get resulting point, the blinding factor\n\n                // validate calculated blinding factor B was provided as an input into original hash 'c'\n                // memory map:\n                // 0x00 - 0x20: B.x\n                // 0x20 - 0x40: B.y\n                // 0x40 - 0x60: x_{8}\n                mstore(add(pointCache, 0x40), runningHash)\n                let result := keccak256(pointCache, 0x60)\n                if eq(result, c) {\n                    calldatacopy(add(pointCache, 0x20), 0x24, 0x240)\n                    mstore(pointCache, 0x1)\n                    return(pointCache, 0x260)\n                }\n                mstore(0x00, 403)\n                revert(0x00, 0x20)\n            }\n\n            function getFunctionSelector() -> v {\n                v := div(calldataload(0), 0x100000000000000000000000000000000000000000000000000000000)\n            }\n\n            function hashInputs(commitmentSize) -> v {\n                // copy from bytes 0x04\n                calldatacopy(mload(0x40), 0x04, commitmentSize)\n                v := keccak256(mload(0x40), commitmentSize)\n            }\n\n            function advanceHash(h) -> r {\n                mstore(0x00, h)\n                r := keccak256(0x00, 0x20)\n            }\n\n            // Can't reference constants with inline assembly and don't want to directly ref calldata offsets so...yeesh\n            function c1() -> px, py {\n                px := calldataload(0x24)\n                py := calldataload(0x44)\n                checkWellFormed(px, py)\n            }\n            function d1() -> px, py {\n                px := calldataload(0x64)\n                py := calldataload(0x84)\n                checkWellFormed(px, py)\n            }\n            function s1() -> px, py {\n                px := calldataload(0xa4)\n                py := calldataload(0xc4)\n                checkWellFormed(px, py)\n            }\n            function c2() -> px, py {\n                px := calldataload(0xe4)\n                py := calldataload(0x104)\n                checkWellFormed(px, py)\n            }\n            function d2() -> px, py {\n                px := calldataload(0x124)\n                py := calldataload(0x144)\n                checkWellFormed(px, py)\n            }\n            function s2() -> px, py {\n                px := calldataload(0x164)\n                py := calldataload(0x184)\n                checkWellFormed(px, py)\n            }\n            function c3() -> px, py {\n                px := calldataload(0x1a4)\n                py := calldataload(0x1c4)\n                checkWellFormed(px, py)\n            }\n            function d3() -> px, py {\n                px := calldataload(0x1e4)\n                py := calldataload(0x204)\n                checkWellFormed(px, py)\n            }\n            function s3() -> px, py {\n                px := calldataload(0x224)\n                py := calldataload(0x244)\n                checkWellFormed(px, py)\n            }\n            function gamma1() -> px, py {\n                px := calldataload(0x264)\n                py := calldataload(0x284)\n                checkWellFormed(px, py)\n            }\n            function sigma1() -> px, py {\n                px := calldataload(0x2a4)\n                py := calldataload(0x2c4)\n                checkWellFormed(px, py)\n            }\n            function gamma2() -> px, py {\n                px := calldataload(0x2e4)\n                py := calldataload(0x304)\n                checkWellFormed(px, py)\n            }\n            function sigma2() -> px, py {\n                px := calldataload(0x324)\n                py := calldataload(0x344)\n                checkWellFormed(px, py)\n            }\n            function checkWellFormed(px, py) {\n                let p := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n                // assert point is on bn_128 curve y^{2} = x^{3} + 3\n                if iszero(eq(addmod(mulmod(mulmod(px, px, p), px, p), 3, p), mulmod(py, py, p))) {\n                    mstore(0x00, 400)\n                    revert(0x00, 0x20)\n                }\n            }\n            function sig_k(offset) -> v {\n                v := calldataload(sub(offset, 0x20))\n            }\n            function sig_b1(offset) -> v {\n                v := loadSignature(offset)\n            }\n            function sig_b2(offset) -> v {\n                v := loadSignature(add(offset, 0x20))\n            }\n            function sig_a2(offset) -> v {\n                v := loadSignature(add(offset, 0x20))\n            }\n            function sig_a3(offset) -> v {\n                v := loadSignature(add(offset, 0x40))\n            }\n            function sig_k2(offset) -> v {\n                v := loadSignature(add(offset, 0x60))\n            }\n            function sig_k3(offset) -> v {\n                v := loadSignature(add(offset, 0x80))\n            }\n            function sig_r1(offset) -> v {\n                v := loadSignature(add(offset, 0xa0))\n            }\n            function sig_r2(offset) -> v {\n                v := loadSignature(add(offset, 0xc0))\n            }\n            function loadSignature(location) -> v {\n                v := calldataload(location)\n                if iszero(and(iszero(iszero(v)), eq(v, mod(v, 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001)))) {\n                    mstore(0x00, 400)\n                    revert(0x00, 0x20)\n                }\n            }\n        }\n    }\n}",
  "sourcePath": "/mnt/c/Users/zacha/CreditMint/Projects/smart-contracts/contracts/lib/AZTEC/old/NIZK.sol",
  "ast": {
    "absolutePath": "/mnt/c/Users/zacha/CreditMint/Projects/smart-contracts/contracts/lib/AZTEC/old/NIZK.sol",
    "exportedSymbols": {
      "Nizk": [
        175
      ],
      "NizkInterface": [
        86
      ],
      "NizkInterfaceLibrary": [
        169
      ]
    },
    "id": 176,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 86,
        "linearizedBaseContracts": [
          86
        ],
        "name": "NizkInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 14,
              "nodeType": "Block",
              "src": "592:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 15,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "validateSplitTx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "543:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$39_calldata_ptr",
                    "typeString": "bytes32[39]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "543:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 6,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3339",
                      "id": 5,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "551:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "39"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "543:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$39_storage_ptr",
                      "typeString": "bytes32[39]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "542:13:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "579:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$19_memory_ptr",
                    "typeString": "bytes32[19]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "579:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 11,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3139",
                      "id": 10,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "587:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "19"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "579:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$19_storage_ptr",
                      "typeString": "bytes32[19]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "578:13:2"
            },
            "scope": 86,
            "src": "518:76:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "672:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 27,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "validateJoinTx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "623:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$23_calldata_ptr",
                    "typeString": "bytes32[23]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "623:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 18,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3233",
                      "id": 17,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "631:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "23"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "623:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$23_storage_ptr",
                      "typeString": "bytes32[23]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "622:13:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "659:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$19_memory_ptr",
                    "typeString": "bytes32[19]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 21,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "659:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 23,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3139",
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "667:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "19"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "659:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$19_storage_ptr",
                      "typeString": "bytes32[19]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "658:13:2"
            },
            "scope": 86,
            "src": "599:75:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "752:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 39,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "validateCommitTx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "705:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$6_calldata_ptr",
                    "typeString": "bytes32[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "705:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 30,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "713:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "705:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                      "typeString": "bytes32[6]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "704:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "740:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$7_memory_ptr",
                    "typeString": "bytes32[7]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 33,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "740:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 35,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "37",
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "748:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "7"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "740:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$7_storage_ptr",
                      "typeString": "bytes32[7]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "739:12:2"
            },
            "scope": 86,
            "src": "679:75:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "833:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 51,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "validateRedeemTx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "785:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$10_calldata_ptr",
                    "typeString": "bytes32[10]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 40,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "785:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 42,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "793:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "10"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "785:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$10_storage_ptr",
                      "typeString": "bytes32[10]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "784:13:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "821:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$7_memory_ptr",
                    "typeString": "bytes32[7]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 45,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "821:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "37",
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "829:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "7"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "821:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$7_storage_ptr",
                      "typeString": "bytes32[7]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "820:12:2"
            },
            "scope": 86,
            "src": "759:76:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "909:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 63,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "DEBUG_eccMul",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "862:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$3_calldata_ptr",
                    "typeString": "bytes32[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 52,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "862:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 54,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "870:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "862:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$3_storage_ptr",
                      "typeString": "bytes32[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "861:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "897:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$2_memory_ptr",
                    "typeString": "bytes32[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 57,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "897:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 59,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "905:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "897:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                      "typeString": "bytes32[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "896:12:2"
            },
            "scope": 86,
            "src": "840:71:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "985:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 75,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "DEBUG_eccAdd",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "938:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$4_calldata_ptr",
                    "typeString": "bytes32[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 64,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "938:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 66,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "34",
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "946:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "938:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$4_storage_ptr",
                      "typeString": "bytes32[4]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "937:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "973:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$2_memory_ptr",
                    "typeString": "bytes32[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 69,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "973:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 71,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "981:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "973:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                      "typeString": "bytes32[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "972:12:2"
            },
            "scope": 86,
            "src": "916:71:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "1059:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 85,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "DEBUG_pairing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1015:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$8_calldata_ptr",
                    "typeString": "bytes32[8]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 76,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1015:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 78,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "38",
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1023:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "8"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1015:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$8_storage_ptr",
                      "typeString": "bytes32[8]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1014:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1050:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1050:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1049:9:2"
            },
            "scope": 86,
            "src": "992:69:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 176,
        "src": "437:626:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": null,
        "fullyImplemented": true,
        "id": 169,
        "linearizedBaseContracts": [
          169
        ],
        "name": "NizkInterfaceLibrary",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "1220:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 98,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "validateSplitTx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "1171:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$39_calldata_ptr",
                    "typeString": "bytes32[39]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1171:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 89,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3339",
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1179:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "39"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1171:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$39_storage_ptr",
                      "typeString": "bytes32[39]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1170:13:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "1207:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$19_memory_ptr",
                    "typeString": "bytes32[19]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 92,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1207:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 94,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3139",
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1215:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "19"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1207:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$19_storage_ptr",
                      "typeString": "bytes32[19]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1206:13:2"
            },
            "scope": 169,
            "src": "1146:76:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "1300:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 110,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "validateJoinTx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1251:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$23_calldata_ptr",
                    "typeString": "bytes32[23]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 99,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1251:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 101,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3233",
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1259:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "23"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1251:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$23_storage_ptr",
                      "typeString": "bytes32[23]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1250:13:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1287:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$19_memory_ptr",
                    "typeString": "bytes32[19]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 104,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1287:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 106,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3139",
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1295:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "19"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1287:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$19_storage_ptr",
                      "typeString": "bytes32[19]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1286:13:2"
            },
            "scope": 169,
            "src": "1227:75:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "1380:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 122,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "validateCommitTx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1333:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$6_calldata_ptr",
                    "typeString": "bytes32[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 111,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1333:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 113,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1341:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1333:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                      "typeString": "bytes32[6]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1332:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1368:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$7_memory_ptr",
                    "typeString": "bytes32[7]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 116,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1368:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 118,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "37",
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1376:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "7"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1368:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$7_storage_ptr",
                      "typeString": "bytes32[7]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1367:12:2"
            },
            "scope": 169,
            "src": "1307:75:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1461:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 134,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "validateRedeemTx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1413:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$10_calldata_ptr",
                    "typeString": "bytes32[10]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 123,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1413:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 125,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1421:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "10"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1413:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$10_storage_ptr",
                      "typeString": "bytes32[10]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1412:13:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1449:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$7_memory_ptr",
                    "typeString": "bytes32[7]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 128,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1449:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 130,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "37",
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1457:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "7"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1449:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$7_storage_ptr",
                      "typeString": "bytes32[7]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1448:12:2"
            },
            "scope": 169,
            "src": "1387:76:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "1537:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 146,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "DEBUG_eccMul",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "1490:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$3_calldata_ptr",
                    "typeString": "bytes32[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 135,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1490:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 137,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1498:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1490:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$3_storage_ptr",
                      "typeString": "bytes32[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1489:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "1525:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$2_memory_ptr",
                    "typeString": "bytes32[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 140,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1525:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 142,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1533:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1525:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                      "typeString": "bytes32[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1524:12:2"
            },
            "scope": 169,
            "src": "1468:71:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "1613:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 158,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "DEBUG_eccAdd",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "1566:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$4_calldata_ptr",
                    "typeString": "bytes32[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 147,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1566:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 149,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "34",
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1574:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1566:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$4_storage_ptr",
                      "typeString": "bytes32[4]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1565:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "1601:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$2_memory_ptr",
                    "typeString": "bytes32[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 152,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1601:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 154,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1609:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1601:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                      "typeString": "bytes32[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1600:12:2"
            },
            "scope": 169,
            "src": "1544:71:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 167,
              "nodeType": "Block",
              "src": "1687:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 168,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "DEBUG_pairing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "1643:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$8_calldata_ptr",
                    "typeString": "bytes32[8]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 159,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1643:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 161,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "38",
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1651:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "8"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1643:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$8_storage_ptr",
                      "typeString": "bytes32[8]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1642:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "1678:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1677:9:2"
            },
            "scope": 169,
            "src": "1620:69:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 176,
        "src": "1065:626:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 175,
        "linearizedBaseContracts": [
          175
        ],
        "name": "Nizk",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "1732:28819:2",
              "statements": [
                {
                  "externalReferences": [],
                  "id": 172,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    switch getFunctionSelector()\n    case 0x75d34641 {\n        validateSplitTx()\n    }\n    case 0xacc8cecd {\n        validateJoinTx()\n    }\n    case 0x814fba66 {\n        validateRedeemTx()\n    }\n    case 0x91036ec8 {\n        validateCommitTx()\n    }\n    case 0x003ec6b9 {\n        let m := mload(0x40)\n        eccMul(calldataload(0x04), calldataload(0x24), calldataload(0x44), m)\n        return(m, 0x40)\n    }\n    case 0x06a791d0 {\n        let m := mload(0x40)\n        calldatacopy(m, 0x04, 0x80)\n        eccCombine(m)\n        return(m, 0x40)\n    }\n    case 0xdda62ba5 {\n        let m := mload(0x40)\n        calldatacopy(m, 0x04, 0x80)\n        validatePairing(m, 0x84)\n        return(m, 0x20)\n    }\n    default {\n        mstore(0x0, 404)\n        revert(0x0, 0x20)\n    }\n    function eccMul(x, y, s, r)\n    {\n        let m := mload(0x40)\n        mstore(m, x)\n        mstore(add(m, 0x20), y)\n        mstore(add(m, 0x40), s)\n        if iszero(staticcall(not(0), 7, m, 0x60, r, 0x40))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function eccCombine(m)\n    {\n        if iszero(staticcall(not(0), 6, m, 0x80, m, 0x40))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function validatePairing(points, g2y)\n    {\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let g2y_x_1 := calldataload(g2y)\n        let g2y_x_2 := calldataload(add(g2y, 0x20))\n        let g2y_y_1 := calldataload(add(g2y, 0x40))\n        let g2y_y_2 := calldataload(add(g2y, 0x60))\n        if or(or(or(or(or(or(or(iszero(g2y_x_1), iszero(g2y_x_2)), iszero(g2y_y_1)), iszero(g2y_y_2)), eq(g2y_x_1, 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)), eq(g2y_x_2, 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)), eq(g2y_y_1, 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)), eq(g2y_y_2, 0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b))\n        {\n            mstore(0x00, 500)\n            revert(0x00, 0x20)\n        }\n        let x_1 := mload(points)\n        let y_1 := mload(add(points, 0x20))\n        let x_2 := mload(add(points, 0x40))\n        let y_2 := mload(add(points, 0x60))\n        let m := mload(0x40)\n        mstore(m, x_1)\n        mstore(add(m, 0x20), y_1)\n        mstore(add(m, 0x60), 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)\n        mstore(add(m, 0x40), 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)\n        mstore(add(m, 0xa0), 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)\n        mstore(add(m, 0x80), 0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b)\n        mstore(add(m, 0xc0), x_2)\n        mstore(add(m, 0xe0), y_2)\n        mstore(add(m, 0x120), g2y_x_1)\n        mstore(add(m, 0x100), g2y_x_2)\n        mstore(add(m, 0x160), g2y_y_1)\n        mstore(add(m, 0x140), g2y_y_2)\n        let success := staticcall(not(0), 8, m, 0x180, m, 0x20)\n        if or(iszero(success), iszero(mload(m)))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function validateCommitTx()\n    {\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let c := calldataload(0xa4)\n        let o := 0x84\n        let pointCache := mload(0x40)\n        mstore(0x40, add(pointCache, 0x80))\n        if iszero(eq(calldatasize(), 0xc4))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n        let x := calldataload(0x24)\n        let y := calldataload(0x44)\n        checkWellFormed(x, y)\n        eccMul(x, sub(field_order, y), c, pointCache)\n        eccMul(1, 2, sig_b1(o), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        mstore(add(pointCache, 0x60), mload(pointCache))\n        mstore(add(pointCache, 0x80), mload(add(pointCache, 0x20)))\n        calldatacopy(pointCache, 0x04, 0x60)\n        let result := keccak256(pointCache, 0xa0)\n        if eq(result, c)\n        {\n            eccMul(1, 2, sig_k(o), add(pointCache, 0x20))\n            mstore(add(pointCache, 0x60), x)\n            mstore(add(pointCache, 0x80), y)\n            eccCombine(add(pointCache, 0x20))\n            mstore(add(pointCache, 0x60), 0x1)\n            mstore(add(pointCache, 0x80), 0x2)\n            calldatacopy(add(pointCache, 0xa0), 0x24, 0x40)\n            mstore(pointCache, 0x1)\n            return(pointCache, 0xe0)\n        }\n        mstore(0x00, 403)\n        revert(0x00, 0x20)\n    }\n    function validateRedeemTx()\n    {\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let c := calldataload(0x124)\n        let o := 0x104\n        let runningHash := hashInputs(0x100)\n        let pointCache := mload(0x40)\n        mstore(0x40, add(pointCache, 0x80))\n        if iszero(eq(calldatasize(), 0x144))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n        let gScalar := mulmod(runningHash, sig_b1(o), gen_order)\n        let x, y := s1()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(c, mulmod(runningHash, sig_k(o), gen_order), gen_order), gen_order)\n        x, y := c1()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        x, y := d1()\n        eccMul(x, y, mulmod(runningHash, sig_b1(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        eccMul(1, 2, gScalar, add(pointCache, 0x40))\n        eccCombine(pointCache)\n        mstore(add(pointCache, 0x40), runningHash)\n        let result := keccak256(pointCache, 0x60)\n        if eq(result, c)\n        {\n            calldatacopy(add(pointCache, 0x20), 0x24, 0xe0)\n            mstore(pointCache, 0x1)\n            return(pointCache, 0xe0)\n        }\n        mstore(0x00, 403)\n        revert(0x00, 0x20)\n    }\n    function validateJoinTx()\n    {\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let c := calldataload(0x2c4)\n        let o := 0x264\n        let runningHash := hashInputs(0x260)\n        let pointCache := mload(0x40)\n        mstore(0x40, add(pointCache, 0xc0))\n        if iszero(eq(calldatasize(), 0x2e4))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n        let gScalar := mulmod(runningHash, sig_b1(o), gen_order)\n        let x, y := s1()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_b2(o), gen_order), gen_order)\n        x, y := s2()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_a3(o), gen_order), gen_order)\n        x, y := d3()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        runningHash := advanceHash(runningHash)\n        x, y := c1()\n        mstore(add(pointCache, 0x40), x)\n        mstore(add(pointCache, 0x60), sub(field_order, y))\n        x, y := c2()\n        mstore(add(pointCache, 0x80), x)\n        mstore(add(pointCache, 0xa0), sub(field_order, y))\n        eccCombine(add(pointCache, 0x40))\n        x, y := c3()\n        mstore(add(pointCache, 0x80), x)\n        mstore(add(pointCache, 0xa0), y)\n        eccCombine(add(pointCache, 0x40))\n        x := mload(add(pointCache, 0x40))\n        y := mload(add(pointCache, 0x60))\n        eccMul(x, y, mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        x, y := d1()\n        eccMul(x, y, mulmod(runningHash, sig_b1(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        x, y := d2()\n        eccMul(x, y, mulmod(runningHash, sig_b2(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        x, y := s3()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, sig_a3(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        eccMul(1, 2, gScalar, add(pointCache, 0x40))\n        eccCombine(pointCache)\n        mstore(add(pointCache, 0x40), runningHash)\n        let result := keccak256(pointCache, 0x60)\n        if eq(result, c)\n        {\n            calldatacopy(add(pointCache, 0x20), 0x24, 0x240)\n            mstore(pointCache, 0x1)\n            return(pointCache, 0x260)\n        }\n        mstore(0x00, 403)\n        revert(0x00, 0x20)\n    }\n    function validateSplitTx()\n    {\n        if iszero(eq(calldatasize(), 0x4e4))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let c := calldataload(0x444)\n        let o := 0x364\n        let runningHash := hashInputs(0x360)\n        let pointCache := mload(0x40)\n        mstore(0x40, add(pointCache, 0xc0))\n        let x, y := sigma1()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), pointCache)\n        x, y := gamma1()\n        eccMul(x, y, mulmod(runningHash, c, gen_order), add(pointCache, 0x80))\n        let temp := runningHash\n        runningHash := advanceHash(runningHash)\n        x, y := sigma2()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        x, y := gamma2()\n        eccMul(x, y, mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(add(pointCache, 0x40))\n        x := mload(pointCache)\n        y := mload(add(pointCache, 0x20))\n        validatePairing(pointCache, 0x464)\n        mstore(pointCache, x)\n        mstore(add(pointCache, 0x20), y)\n        let gScalar := mulmod(temp, sig_r1(o), gen_order)\n        x, y := gamma1()\n        eccMul(x, sub(field_order, y), mulmod(temp, sig_k2(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_r2(o), gen_order), gen_order)\n        x, y := gamma2()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, sig_k3(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_b1(o), gen_order), gen_order)\n        x, y := s1()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_a2(o), gen_order), gen_order)\n        x, y := d2()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_a3(o), gen_order), gen_order)\n        x, y := d3()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_k2(o), gen_order), gen_order)\n        x, y := c2()\n        mstore(add(pointCache, 0x40), x)\n        mstore(add(pointCache, 0x60), y)\n        mstore(add(pointCache, 0x80), 1)\n        mstore(add(pointCache, 0xa0), 2)\n        eccCombine(add(pointCache, 0x40))\n        x := mload(add(pointCache, 0x40))\n        y := mload(add(pointCache, 0x60))\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        x, y := s2()\n        eccMul(x, y, mulmod(runningHash, sig_a2(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_k3(o), gen_order), gen_order)\n        x, y := c3()\n        mstore(add(pointCache, 0x40), x)\n        mstore(add(pointCache, 0x60), y)\n        mstore(add(pointCache, 0x80), 1)\n        mstore(add(pointCache, 0xa0), 2)\n        eccCombine(add(pointCache, 0x40))\n        x := mload(add(pointCache, 0x40))\n        y := mload(add(pointCache, 0x60))\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        x, y := s3()\n        eccMul(x, y, mulmod(runningHash, sig_a3(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_k2(o), gen_order), gen_order)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_k3(o), gen_order), gen_order)\n        x, y := c1()\n        mstore(add(pointCache, 0x40), x)\n        mstore(add(pointCache, 0x60), y)\n        mstore(add(pointCache, 0x80), 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd3)\n        mstore(add(pointCache, 0xa0), 0x15ed738c0e0a7c92e7845f96b2ae9c0a68a6a449e3538fc7ff3ebf7a5a18a2c4)\n        eccCombine(add(pointCache, 0x40))\n        x := mload(add(pointCache, 0x40))\n        y := mload(add(pointCache, 0x60))\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        x, y := d1()\n        eccMul(x, y, mulmod(runningHash, sig_b1(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        eccMul(1, 2, gScalar, add(pointCache, 0x40))\n        eccCombine(pointCache)\n        mstore(add(pointCache, 0x40), runningHash)\n        let result := keccak256(pointCache, 0x60)\n        if eq(result, c)\n        {\n            calldatacopy(add(pointCache, 0x20), 0x24, 0x240)\n            mstore(pointCache, 0x1)\n            return(pointCache, 0x260)\n        }\n        mstore(0x00, 403)\n        revert(0x00, 0x20)\n    }\n    function getFunctionSelector() -> v\n    {\n        v := div(calldataload(0), 0x100000000000000000000000000000000000000000000000000000000)\n    }\n    function hashInputs(commitmentSize) -> v\n    {\n        calldatacopy(mload(0x40), 0x04, commitmentSize)\n        v := keccak256(mload(0x40), commitmentSize)\n    }\n    function advanceHash(h) -> r\n    {\n        mstore(0x00, h)\n        r := keccak256(0x00, 0x20)\n    }\n    function c1() -> px, py\n    {\n        px := calldataload(0x24)\n        py := calldataload(0x44)\n        checkWellFormed(px, py)\n    }\n    function d1() -> px, py\n    {\n        px := calldataload(0x64)\n        py := calldataload(0x84)\n        checkWellFormed(px, py)\n    }\n    function s1() -> px, py\n    {\n        px := calldataload(0xa4)\n        py := calldataload(0xc4)\n        checkWellFormed(px, py)\n    }\n    function c2() -> px, py\n    {\n        px := calldataload(0xe4)\n        py := calldataload(0x104)\n        checkWellFormed(px, py)\n    }\n    function d2() -> px, py\n    {\n        px := calldataload(0x124)\n        py := calldataload(0x144)\n        checkWellFormed(px, py)\n    }\n    function s2() -> px, py\n    {\n        px := calldataload(0x164)\n        py := calldataload(0x184)\n        checkWellFormed(px, py)\n    }\n    function c3() -> px, py\n    {\n        px := calldataload(0x1a4)\n        py := calldataload(0x1c4)\n        checkWellFormed(px, py)\n    }\n    function d3() -> px, py\n    {\n        px := calldataload(0x1e4)\n        py := calldataload(0x204)\n        checkWellFormed(px, py)\n    }\n    function s3() -> px, py\n    {\n        px := calldataload(0x224)\n        py := calldataload(0x244)\n        checkWellFormed(px, py)\n    }\n    function gamma1() -> px, py\n    {\n        px := calldataload(0x264)\n        py := calldataload(0x284)\n        checkWellFormed(px, py)\n    }\n    function sigma1() -> px, py\n    {\n        px := calldataload(0x2a4)\n        py := calldataload(0x2c4)\n        checkWellFormed(px, py)\n    }\n    function gamma2() -> px, py\n    {\n        px := calldataload(0x2e4)\n        py := calldataload(0x304)\n        checkWellFormed(px, py)\n    }\n    function sigma2() -> px, py\n    {\n        px := calldataload(0x324)\n        py := calldataload(0x344)\n        checkWellFormed(px, py)\n    }\n    function checkWellFormed(px, py)\n    {\n        let p := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        if iszero(eq(addmod(mulmod(mulmod(px, px, p), px, p), 3, p), mulmod(py, py, p)))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function sig_k(offset) -> v\n    {\n        v := calldataload(sub(offset, 0x20))\n    }\n    function sig_b1(offset) -> v\n    {\n        v := loadSignature(offset)\n    }\n    function sig_b2(offset) -> v\n    {\n        v := loadSignature(add(offset, 0x20))\n    }\n    function sig_a2(offset) -> v\n    {\n        v := loadSignature(add(offset, 0x20))\n    }\n    function sig_a3(offset) -> v\n    {\n        v := loadSignature(add(offset, 0x40))\n    }\n    function sig_k2(offset) -> v\n    {\n        v := loadSignature(add(offset, 0x60))\n    }\n    function sig_k3(offset) -> v\n    {\n        v := loadSignature(add(offset, 0x80))\n    }\n    function sig_r1(offset) -> v\n    {\n        v := loadSignature(add(offset, 0xa0))\n    }\n    function sig_r2(offset) -> v\n    {\n        v := loadSignature(add(offset, 0xc0))\n    }\n    function loadSignature(location) -> v\n    {\n        v := calldataload(location)\n        if iszero(and(iszero(iszero(v)), eq(v, mod(v, 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001))))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n}",
                  "src": "1742:28809:2"
                }
              ]
            },
            "documentation": null,
            "id": 174,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1722:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:0:2"
            },
            "scope": 175,
            "src": "1713:28838:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 176,
        "src": "1693:28860:2"
      }
    ],
    "src": "0:30553:2"
  },
  "legacyAST": {
    "absolutePath": "/mnt/c/Users/zacha/CreditMint/Projects/smart-contracts/contracts/lib/AZTEC/old/NIZK.sol",
    "exportedSymbols": {
      "Nizk": [
        175
      ],
      "NizkInterface": [
        86
      ],
      "NizkInterfaceLibrary": [
        169
      ]
    },
    "id": 176,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 86,
        "linearizedBaseContracts": [
          86
        ],
        "name": "NizkInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 14,
              "nodeType": "Block",
              "src": "592:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 15,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "validateSplitTx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "543:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$39_calldata_ptr",
                    "typeString": "bytes32[39]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "543:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 6,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3339",
                      "id": 5,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "551:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "39"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "543:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$39_storage_ptr",
                      "typeString": "bytes32[39]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "542:13:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "579:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$19_memory_ptr",
                    "typeString": "bytes32[19]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "579:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 11,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3139",
                      "id": 10,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "587:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "19"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "579:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$19_storage_ptr",
                      "typeString": "bytes32[19]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "578:13:2"
            },
            "scope": 86,
            "src": "518:76:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "672:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 27,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "validateJoinTx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "623:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$23_calldata_ptr",
                    "typeString": "bytes32[23]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "623:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 18,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3233",
                      "id": 17,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "631:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "23"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "623:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$23_storage_ptr",
                      "typeString": "bytes32[23]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "622:13:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "659:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$19_memory_ptr",
                    "typeString": "bytes32[19]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 21,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "659:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 23,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3139",
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "667:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "19"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "659:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$19_storage_ptr",
                      "typeString": "bytes32[19]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "658:13:2"
            },
            "scope": 86,
            "src": "599:75:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "752:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 39,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "validateCommitTx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "705:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$6_calldata_ptr",
                    "typeString": "bytes32[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "705:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 30,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "713:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "705:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                      "typeString": "bytes32[6]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "704:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "740:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$7_memory_ptr",
                    "typeString": "bytes32[7]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 33,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "740:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 35,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "37",
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "748:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "7"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "740:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$7_storage_ptr",
                      "typeString": "bytes32[7]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "739:12:2"
            },
            "scope": 86,
            "src": "679:75:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "833:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 51,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "validateRedeemTx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "785:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$10_calldata_ptr",
                    "typeString": "bytes32[10]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 40,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "785:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 42,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "793:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "10"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "785:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$10_storage_ptr",
                      "typeString": "bytes32[10]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "784:13:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "821:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$7_memory_ptr",
                    "typeString": "bytes32[7]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 45,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "821:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "37",
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "829:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "7"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "821:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$7_storage_ptr",
                      "typeString": "bytes32[7]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "820:12:2"
            },
            "scope": 86,
            "src": "759:76:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "909:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 63,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "DEBUG_eccMul",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "862:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$3_calldata_ptr",
                    "typeString": "bytes32[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 52,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "862:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 54,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "870:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "862:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$3_storage_ptr",
                      "typeString": "bytes32[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "861:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "897:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$2_memory_ptr",
                    "typeString": "bytes32[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 57,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "897:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 59,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "905:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "897:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                      "typeString": "bytes32[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "896:12:2"
            },
            "scope": 86,
            "src": "840:71:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "985:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 75,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "DEBUG_eccAdd",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "938:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$4_calldata_ptr",
                    "typeString": "bytes32[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 64,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "938:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 66,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "34",
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "946:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "938:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$4_storage_ptr",
                      "typeString": "bytes32[4]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "937:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "973:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$2_memory_ptr",
                    "typeString": "bytes32[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 69,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "973:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 71,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "981:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "973:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                      "typeString": "bytes32[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "972:12:2"
            },
            "scope": 86,
            "src": "916:71:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "1059:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 85,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "DEBUG_pairing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1015:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$8_calldata_ptr",
                    "typeString": "bytes32[8]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 76,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1015:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 78,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "38",
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1023:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "8"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1015:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$8_storage_ptr",
                      "typeString": "bytes32[8]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1014:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1050:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1050:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1049:9:2"
            },
            "scope": 86,
            "src": "992:69:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 176,
        "src": "437:626:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": null,
        "fullyImplemented": true,
        "id": 169,
        "linearizedBaseContracts": [
          169
        ],
        "name": "NizkInterfaceLibrary",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "1220:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 98,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "validateSplitTx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "1171:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$39_calldata_ptr",
                    "typeString": "bytes32[39]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1171:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 89,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3339",
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1179:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "39"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1171:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$39_storage_ptr",
                      "typeString": "bytes32[39]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1170:13:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "1207:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$19_memory_ptr",
                    "typeString": "bytes32[19]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 92,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1207:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 94,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3139",
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1215:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "19"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1207:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$19_storage_ptr",
                      "typeString": "bytes32[19]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1206:13:2"
            },
            "scope": 169,
            "src": "1146:76:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "1300:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 110,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "validateJoinTx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1251:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$23_calldata_ptr",
                    "typeString": "bytes32[23]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 99,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1251:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 101,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3233",
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1259:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "23"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1251:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$23_storage_ptr",
                      "typeString": "bytes32[23]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1250:13:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1287:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$19_memory_ptr",
                    "typeString": "bytes32[19]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 104,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1287:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 106,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3139",
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1295:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "19"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1287:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$19_storage_ptr",
                      "typeString": "bytes32[19]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1286:13:2"
            },
            "scope": 169,
            "src": "1227:75:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "1380:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 122,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "validateCommitTx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1333:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$6_calldata_ptr",
                    "typeString": "bytes32[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 111,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1333:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 113,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1341:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1333:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                      "typeString": "bytes32[6]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1332:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1368:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$7_memory_ptr",
                    "typeString": "bytes32[7]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 116,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1368:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 118,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "37",
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1376:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "7"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1368:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$7_storage_ptr",
                      "typeString": "bytes32[7]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1367:12:2"
            },
            "scope": 169,
            "src": "1307:75:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1461:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 134,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "validateRedeemTx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1413:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$10_calldata_ptr",
                    "typeString": "bytes32[10]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 123,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1413:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 125,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1421:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "10"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1413:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$10_storage_ptr",
                      "typeString": "bytes32[10]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1412:13:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1449:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$7_memory_ptr",
                    "typeString": "bytes32[7]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 128,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1449:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 130,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "37",
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1457:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "7"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1449:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$7_storage_ptr",
                      "typeString": "bytes32[7]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1448:12:2"
            },
            "scope": 169,
            "src": "1387:76:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "1537:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 146,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "DEBUG_eccMul",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "1490:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$3_calldata_ptr",
                    "typeString": "bytes32[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 135,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1490:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 137,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1498:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1490:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$3_storage_ptr",
                      "typeString": "bytes32[3]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1489:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "1525:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$2_memory_ptr",
                    "typeString": "bytes32[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 140,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1525:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 142,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1533:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1525:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                      "typeString": "bytes32[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1524:12:2"
            },
            "scope": 169,
            "src": "1468:71:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "1613:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 158,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "DEBUG_eccAdd",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "1566:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$4_calldata_ptr",
                    "typeString": "bytes32[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 147,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1566:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 149,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "34",
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1574:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1566:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$4_storage_ptr",
                      "typeString": "bytes32[4]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1565:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "1601:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$2_memory_ptr",
                    "typeString": "bytes32[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 152,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1601:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 154,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1609:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1601:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$2_storage_ptr",
                      "typeString": "bytes32[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1600:12:2"
            },
            "scope": 169,
            "src": "1544:71:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 167,
              "nodeType": "Block",
              "src": "1687:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 168,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "DEBUG_pairing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "1643:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$8_calldata_ptr",
                    "typeString": "bytes32[8]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 159,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1643:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 161,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "38",
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1651:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "8"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1643:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$8_storage_ptr",
                      "typeString": "bytes32[8]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1642:12:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "1678:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1677:9:2"
            },
            "scope": 169,
            "src": "1620:69:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 176,
        "src": "1065:626:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 175,
        "linearizedBaseContracts": [
          175
        ],
        "name": "Nizk",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "1732:28819:2",
              "statements": [
                {
                  "externalReferences": [],
                  "id": 172,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    switch getFunctionSelector()\n    case 0x75d34641 {\n        validateSplitTx()\n    }\n    case 0xacc8cecd {\n        validateJoinTx()\n    }\n    case 0x814fba66 {\n        validateRedeemTx()\n    }\n    case 0x91036ec8 {\n        validateCommitTx()\n    }\n    case 0x003ec6b9 {\n        let m := mload(0x40)\n        eccMul(calldataload(0x04), calldataload(0x24), calldataload(0x44), m)\n        return(m, 0x40)\n    }\n    case 0x06a791d0 {\n        let m := mload(0x40)\n        calldatacopy(m, 0x04, 0x80)\n        eccCombine(m)\n        return(m, 0x40)\n    }\n    case 0xdda62ba5 {\n        let m := mload(0x40)\n        calldatacopy(m, 0x04, 0x80)\n        validatePairing(m, 0x84)\n        return(m, 0x20)\n    }\n    default {\n        mstore(0x0, 404)\n        revert(0x0, 0x20)\n    }\n    function eccMul(x, y, s, r)\n    {\n        let m := mload(0x40)\n        mstore(m, x)\n        mstore(add(m, 0x20), y)\n        mstore(add(m, 0x40), s)\n        if iszero(staticcall(not(0), 7, m, 0x60, r, 0x40))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function eccCombine(m)\n    {\n        if iszero(staticcall(not(0), 6, m, 0x80, m, 0x40))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function validatePairing(points, g2y)\n    {\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let g2y_x_1 := calldataload(g2y)\n        let g2y_x_2 := calldataload(add(g2y, 0x20))\n        let g2y_y_1 := calldataload(add(g2y, 0x40))\n        let g2y_y_2 := calldataload(add(g2y, 0x60))\n        if or(or(or(or(or(or(or(iszero(g2y_x_1), iszero(g2y_x_2)), iszero(g2y_y_1)), iszero(g2y_y_2)), eq(g2y_x_1, 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)), eq(g2y_x_2, 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)), eq(g2y_y_1, 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)), eq(g2y_y_2, 0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b))\n        {\n            mstore(0x00, 500)\n            revert(0x00, 0x20)\n        }\n        let x_1 := mload(points)\n        let y_1 := mload(add(points, 0x20))\n        let x_2 := mload(add(points, 0x40))\n        let y_2 := mload(add(points, 0x60))\n        let m := mload(0x40)\n        mstore(m, x_1)\n        mstore(add(m, 0x20), y_1)\n        mstore(add(m, 0x60), 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)\n        mstore(add(m, 0x40), 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)\n        mstore(add(m, 0xa0), 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)\n        mstore(add(m, 0x80), 0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b)\n        mstore(add(m, 0xc0), x_2)\n        mstore(add(m, 0xe0), y_2)\n        mstore(add(m, 0x120), g2y_x_1)\n        mstore(add(m, 0x100), g2y_x_2)\n        mstore(add(m, 0x160), g2y_y_1)\n        mstore(add(m, 0x140), g2y_y_2)\n        let success := staticcall(not(0), 8, m, 0x180, m, 0x20)\n        if or(iszero(success), iszero(mload(m)))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function validateCommitTx()\n    {\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let c := calldataload(0xa4)\n        let o := 0x84\n        let pointCache := mload(0x40)\n        mstore(0x40, add(pointCache, 0x80))\n        if iszero(eq(calldatasize(), 0xc4))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n        let x := calldataload(0x24)\n        let y := calldataload(0x44)\n        checkWellFormed(x, y)\n        eccMul(x, sub(field_order, y), c, pointCache)\n        eccMul(1, 2, sig_b1(o), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        mstore(add(pointCache, 0x60), mload(pointCache))\n        mstore(add(pointCache, 0x80), mload(add(pointCache, 0x20)))\n        calldatacopy(pointCache, 0x04, 0x60)\n        let result := keccak256(pointCache, 0xa0)\n        if eq(result, c)\n        {\n            eccMul(1, 2, sig_k(o), add(pointCache, 0x20))\n            mstore(add(pointCache, 0x60), x)\n            mstore(add(pointCache, 0x80), y)\n            eccCombine(add(pointCache, 0x20))\n            mstore(add(pointCache, 0x60), 0x1)\n            mstore(add(pointCache, 0x80), 0x2)\n            calldatacopy(add(pointCache, 0xa0), 0x24, 0x40)\n            mstore(pointCache, 0x1)\n            return(pointCache, 0xe0)\n        }\n        mstore(0x00, 403)\n        revert(0x00, 0x20)\n    }\n    function validateRedeemTx()\n    {\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let c := calldataload(0x124)\n        let o := 0x104\n        let runningHash := hashInputs(0x100)\n        let pointCache := mload(0x40)\n        mstore(0x40, add(pointCache, 0x80))\n        if iszero(eq(calldatasize(), 0x144))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n        let gScalar := mulmod(runningHash, sig_b1(o), gen_order)\n        let x, y := s1()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(c, mulmod(runningHash, sig_k(o), gen_order), gen_order), gen_order)\n        x, y := c1()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        x, y := d1()\n        eccMul(x, y, mulmod(runningHash, sig_b1(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        eccMul(1, 2, gScalar, add(pointCache, 0x40))\n        eccCombine(pointCache)\n        mstore(add(pointCache, 0x40), runningHash)\n        let result := keccak256(pointCache, 0x60)\n        if eq(result, c)\n        {\n            calldatacopy(add(pointCache, 0x20), 0x24, 0xe0)\n            mstore(pointCache, 0x1)\n            return(pointCache, 0xe0)\n        }\n        mstore(0x00, 403)\n        revert(0x00, 0x20)\n    }\n    function validateJoinTx()\n    {\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let c := calldataload(0x2c4)\n        let o := 0x264\n        let runningHash := hashInputs(0x260)\n        let pointCache := mload(0x40)\n        mstore(0x40, add(pointCache, 0xc0))\n        if iszero(eq(calldatasize(), 0x2e4))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n        let gScalar := mulmod(runningHash, sig_b1(o), gen_order)\n        let x, y := s1()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_b2(o), gen_order), gen_order)\n        x, y := s2()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_a3(o), gen_order), gen_order)\n        x, y := d3()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        runningHash := advanceHash(runningHash)\n        x, y := c1()\n        mstore(add(pointCache, 0x40), x)\n        mstore(add(pointCache, 0x60), sub(field_order, y))\n        x, y := c2()\n        mstore(add(pointCache, 0x80), x)\n        mstore(add(pointCache, 0xa0), sub(field_order, y))\n        eccCombine(add(pointCache, 0x40))\n        x, y := c3()\n        mstore(add(pointCache, 0x80), x)\n        mstore(add(pointCache, 0xa0), y)\n        eccCombine(add(pointCache, 0x40))\n        x := mload(add(pointCache, 0x40))\n        y := mload(add(pointCache, 0x60))\n        eccMul(x, y, mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        x, y := d1()\n        eccMul(x, y, mulmod(runningHash, sig_b1(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        x, y := d2()\n        eccMul(x, y, mulmod(runningHash, sig_b2(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        x, y := s3()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, sig_a3(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        eccMul(1, 2, gScalar, add(pointCache, 0x40))\n        eccCombine(pointCache)\n        mstore(add(pointCache, 0x40), runningHash)\n        let result := keccak256(pointCache, 0x60)\n        if eq(result, c)\n        {\n            calldatacopy(add(pointCache, 0x20), 0x24, 0x240)\n            mstore(pointCache, 0x1)\n            return(pointCache, 0x260)\n        }\n        mstore(0x00, 403)\n        revert(0x00, 0x20)\n    }\n    function validateSplitTx()\n    {\n        if iszero(eq(calldatasize(), 0x4e4))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let c := calldataload(0x444)\n        let o := 0x364\n        let runningHash := hashInputs(0x360)\n        let pointCache := mload(0x40)\n        mstore(0x40, add(pointCache, 0xc0))\n        let x, y := sigma1()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), pointCache)\n        x, y := gamma1()\n        eccMul(x, y, mulmod(runningHash, c, gen_order), add(pointCache, 0x80))\n        let temp := runningHash\n        runningHash := advanceHash(runningHash)\n        x, y := sigma2()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        x, y := gamma2()\n        eccMul(x, y, mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(add(pointCache, 0x40))\n        x := mload(pointCache)\n        y := mload(add(pointCache, 0x20))\n        validatePairing(pointCache, 0x464)\n        mstore(pointCache, x)\n        mstore(add(pointCache, 0x20), y)\n        let gScalar := mulmod(temp, sig_r1(o), gen_order)\n        x, y := gamma1()\n        eccMul(x, sub(field_order, y), mulmod(temp, sig_k2(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_r2(o), gen_order), gen_order)\n        x, y := gamma2()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, sig_k3(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_b1(o), gen_order), gen_order)\n        x, y := s1()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_a2(o), gen_order), gen_order)\n        x, y := d2()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_a3(o), gen_order), gen_order)\n        x, y := d3()\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_k2(o), gen_order), gen_order)\n        x, y := c2()\n        mstore(add(pointCache, 0x40), x)\n        mstore(add(pointCache, 0x60), y)\n        mstore(add(pointCache, 0x80), 1)\n        mstore(add(pointCache, 0xa0), 2)\n        eccCombine(add(pointCache, 0x40))\n        x := mload(add(pointCache, 0x40))\n        y := mload(add(pointCache, 0x60))\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        x, y := s2()\n        eccMul(x, y, mulmod(runningHash, sig_a2(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_k3(o), gen_order), gen_order)\n        x, y := c3()\n        mstore(add(pointCache, 0x40), x)\n        mstore(add(pointCache, 0x60), y)\n        mstore(add(pointCache, 0x80), 1)\n        mstore(add(pointCache, 0xa0), 2)\n        eccCombine(add(pointCache, 0x40))\n        x := mload(add(pointCache, 0x40))\n        y := mload(add(pointCache, 0x60))\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        x, y := s3()\n        eccMul(x, y, mulmod(runningHash, sig_a3(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        runningHash := advanceHash(runningHash)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_k2(o), gen_order), gen_order)\n        gScalar := addmod(gScalar, mulmod(runningHash, sig_k3(o), gen_order), gen_order)\n        x, y := c1()\n        mstore(add(pointCache, 0x40), x)\n        mstore(add(pointCache, 0x60), y)\n        mstore(add(pointCache, 0x80), 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd3)\n        mstore(add(pointCache, 0xa0), 0x15ed738c0e0a7c92e7845f96b2ae9c0a68a6a449e3538fc7ff3ebf7a5a18a2c4)\n        eccCombine(add(pointCache, 0x40))\n        x := mload(add(pointCache, 0x40))\n        y := mload(add(pointCache, 0x60))\n        eccMul(x, sub(field_order, y), mulmod(runningHash, c, gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        x, y := d1()\n        eccMul(x, y, mulmod(runningHash, sig_b1(o), gen_order), add(pointCache, 0x40))\n        eccCombine(pointCache)\n        eccMul(1, 2, gScalar, add(pointCache, 0x40))\n        eccCombine(pointCache)\n        mstore(add(pointCache, 0x40), runningHash)\n        let result := keccak256(pointCache, 0x60)\n        if eq(result, c)\n        {\n            calldatacopy(add(pointCache, 0x20), 0x24, 0x240)\n            mstore(pointCache, 0x1)\n            return(pointCache, 0x260)\n        }\n        mstore(0x00, 403)\n        revert(0x00, 0x20)\n    }\n    function getFunctionSelector() -> v\n    {\n        v := div(calldataload(0), 0x100000000000000000000000000000000000000000000000000000000)\n    }\n    function hashInputs(commitmentSize) -> v\n    {\n        calldatacopy(mload(0x40), 0x04, commitmentSize)\n        v := keccak256(mload(0x40), commitmentSize)\n    }\n    function advanceHash(h) -> r\n    {\n        mstore(0x00, h)\n        r := keccak256(0x00, 0x20)\n    }\n    function c1() -> px, py\n    {\n        px := calldataload(0x24)\n        py := calldataload(0x44)\n        checkWellFormed(px, py)\n    }\n    function d1() -> px, py\n    {\n        px := calldataload(0x64)\n        py := calldataload(0x84)\n        checkWellFormed(px, py)\n    }\n    function s1() -> px, py\n    {\n        px := calldataload(0xa4)\n        py := calldataload(0xc4)\n        checkWellFormed(px, py)\n    }\n    function c2() -> px, py\n    {\n        px := calldataload(0xe4)\n        py := calldataload(0x104)\n        checkWellFormed(px, py)\n    }\n    function d2() -> px, py\n    {\n        px := calldataload(0x124)\n        py := calldataload(0x144)\n        checkWellFormed(px, py)\n    }\n    function s2() -> px, py\n    {\n        px := calldataload(0x164)\n        py := calldataload(0x184)\n        checkWellFormed(px, py)\n    }\n    function c3() -> px, py\n    {\n        px := calldataload(0x1a4)\n        py := calldataload(0x1c4)\n        checkWellFormed(px, py)\n    }\n    function d3() -> px, py\n    {\n        px := calldataload(0x1e4)\n        py := calldataload(0x204)\n        checkWellFormed(px, py)\n    }\n    function s3() -> px, py\n    {\n        px := calldataload(0x224)\n        py := calldataload(0x244)\n        checkWellFormed(px, py)\n    }\n    function gamma1() -> px, py\n    {\n        px := calldataload(0x264)\n        py := calldataload(0x284)\n        checkWellFormed(px, py)\n    }\n    function sigma1() -> px, py\n    {\n        px := calldataload(0x2a4)\n        py := calldataload(0x2c4)\n        checkWellFormed(px, py)\n    }\n    function gamma2() -> px, py\n    {\n        px := calldataload(0x2e4)\n        py := calldataload(0x304)\n        checkWellFormed(px, py)\n    }\n    function sigma2() -> px, py\n    {\n        px := calldataload(0x324)\n        py := calldataload(0x344)\n        checkWellFormed(px, py)\n    }\n    function checkWellFormed(px, py)\n    {\n        let p := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        if iszero(eq(addmod(mulmod(mulmod(px, px, p), px, p), 3, p), mulmod(py, py, p)))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function sig_k(offset) -> v\n    {\n        v := calldataload(sub(offset, 0x20))\n    }\n    function sig_b1(offset) -> v\n    {\n        v := loadSignature(offset)\n    }\n    function sig_b2(offset) -> v\n    {\n        v := loadSignature(add(offset, 0x20))\n    }\n    function sig_a2(offset) -> v\n    {\n        v := loadSignature(add(offset, 0x20))\n    }\n    function sig_a3(offset) -> v\n    {\n        v := loadSignature(add(offset, 0x40))\n    }\n    function sig_k2(offset) -> v\n    {\n        v := loadSignature(add(offset, 0x60))\n    }\n    function sig_k3(offset) -> v\n    {\n        v := loadSignature(add(offset, 0x80))\n    }\n    function sig_r1(offset) -> v\n    {\n        v := loadSignature(add(offset, 0xa0))\n    }\n    function sig_r2(offset) -> v\n    {\n        v := loadSignature(add(offset, 0xc0))\n    }\n    function loadSignature(location) -> v\n    {\n        v := calldataload(location)\n        if iszero(and(iszero(iszero(v)), eq(v, mod(v, 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001))))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n}",
                  "src": "1742:28809:2"
                }
              ]
            },
            "documentation": null,
            "id": 174,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1722:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:0:2"
            },
            "scope": 175,
            "src": "1713:28838:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 176,
        "src": "1693:28860:2"
      }
    ],
    "src": "0:30553:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-08-30T13:02:27.727Z"
}